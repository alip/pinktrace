---
layout: default
title: Home
---

## About
**PinkTrace** is a *ptrace()* wrapper library.

## Overview
**PinkTrace** is a lightweight C library that eases the writing of tracing
applications. It consists of the following parts:

- Wrappers around different *ptrace()* calls.
- A wrapper around *fork()* call which does the tracing setup.
- An API for decoding arguments (strings, socket addresses, ...)
- An **experimental** API for encoding arguments.

## Documentation
An extensive API reference is [available](##HOMEPAGE##/api/c).

## Bindings
Bindings are available for:

- [Ruby](##HOMEPAGE##/api/ruby)
- [Python](##HOMEPAGE##/api/python)

## Compiling C Code
You will need to specify various compiler flags when compiling C code. The
usual way to do this is via **pkg-config**:

    $ gcc -c `pkg-config --cflags pinktrace` -o example.o example.c
    $ gcc `pkg-config --libs pinktrace` -o example example.o

If you are using autotools, consider using **PKG\_CHECK\_MODULES** rather than
calling **pkg-config** by hand.

## Examples
There are examples how to use the various parts of the library.

<table border="0">
    <tr>
        <th>Example</th>
        <th colspan="3">Language</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>about</td>
        <td>
            <a href="##HOMEPAGE##/c-pink-about.html">C</a>
            (<a href="##HOMEPAGE##/examples/c/pink-about.c">raw</a>)
        </td>
        <td>
            <a href="##HOMEPAGE##/py-pink-about.html">Python</a>
            (<a href="##HOMEPAGE##/examples/python/pink-about.py">raw</a>)
        </td>
        <td>
            <a href="##HOMEPAGE##/rb-pink-about.html">Ruby</a>
            (<a href="##HOMEPAGE##/examples/ruby/pink-about.rb">raw</a>)
        </td>
        <td>How to use PinkTrace version macros</td>
    </tr>
    <tr>
        <td>fork</td>
        <td>
            <a href="##HOMEPAGE##/c-pink-fork.html">C</a>
            (<a href="##HOMEPAGE##/examples/c/pink-fork.c">raw</a>)
        </td>
        <td>
            <a href="##HOMEPAGE##/py-pink-fork.html">Python</a>
            (<a href="##HOMEPAGE##/examples/python/pink-fork.py">raw</a>)
        </td>
        <td>
            <a href="##HOMEPAGE##/rb-pink-fork.html">Ruby</a>
            (<a href="##HOMEPAGE##/examples/ruby/pink-fork.rb">raw</a>)
        </td>
        <td>How to use PinkTrace's fork() wrapper</td>
    </tr>
    <tr>
        <td>simple-strace</td>
        <td>
            <a href="##HOMEPAGE##/c-pink-simple-strace.html">C</a>
            (<a href="##HOMEPAGE##/examples/c/pink-simple-strace.c">raw</a>)
        </td>
        <td>
            <a href="##HOMEPAGE##/py-pink-simple-strace.html">Python</a>
            (<a href="##HOMEPAGE##/examples/python/pink-simple-strace.py">raw</a>)
        </td>
        <td>
            <a href="##HOMEPAGE##/rb-pink-simple-strace.html">Ruby</a>
            (<a href="##HOMEPAGE##/examples/ruby/pink-simple-strace.rb">raw</a>)
        </td>
        <td>A simple strace-like program</td>
    </tr>
</table>

## Contribute
Clone [##SCM_URI##](##SCM_URI##).  
Format patches are preferred. Either send a mail to me or poke me on IRC.  
My personal e-mail address is [alip@exherbo.org](mailto://alip@exherbo.org)  
I'm available on IRC as <tt>alip</tt> on [Freenode](http://freenode.net) and
[OFTC](http://www.oftc.net/)

## Supported Operating Systems
Linux is the only supported operating system at the moment.  
However, there are plans to port **PinkTrace** to FreeBSD.

## Supported Architectures
Supported architectures are:

- [x86](http://en.wikipedia.org/wiki/X86)
- [x86\_64](http://en.wikipedia.org/wiki/X86_64)
- [ia64](http://en.wikipedia.org/wiki/Ia64)
- [ppc](http://en.wikipedia.org/wiki/PowerPC)
- [ppc64](http://en.wikipedia.org/wiki/Ppc64)

## License
This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free
Software Foundation, either version 2.1 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

<!-- vim: set tw=80 ft=mkd spell spelllang=en sw=4 sts=4 et : -->
