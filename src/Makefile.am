CLEANFILES=
AM_CFLAGS= -I$(top_srcdir)/include @PINKTRACE_CFLAGS@

libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES= \
					     pink-bitness.c \
					     pink-name-wrap.c \
					     pink-trace-internal.c
libpinktrace_@PINKTRACE_PC_SLOT@_la_LDFLAGS= -version-info @VERSION_LIB_CURRENT@:@VERSION_LIB_REVISION@:0

lib_LTLIBRARIES = libpinktrace_@PINKTRACE_PC_SLOT@.la

# Operating system specific sources
if FREEBSD
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-freebsd-trace.c \
					      pink-freebsd-util.c

# Platform specific sources
if I386
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-freebsd-name-i386.c \
					      pink-freebsd-trace-i386.c
endif # I386
if X86_64
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-freebsd-name-amd64.c \
					      pink-freebsd-trace-amd64.c
endif # X86_64
endif # FREEBSD

if LINUX
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-linux-event.c \
					      pink-linux-socket.c \
					      pink-linux-trace.c \
					      pink-linux-util.c

# Platform specific sources
if I386
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-linux-name.c \
					      pink-linux-trace-x86.c
endif
if X86_64
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-linux-name32.c \
					      pink-linux-name64.c \
					      pink-linux-trace-x86_64.c
endif
if IA64
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-name.c \
					      pink-linux-trace-ia64.c
endif
if POWERPC
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-name.c \
					      pink-linux-trace-powerpc.c
endif
if POWERPC64
libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= \
					      pink-name.c \
					      pink-linux-trace-powerpc.c
endif
endif # LINUX

# Generated sources
nodist_libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES=
BUILT_SOURCES=

if FREEBSD
nodist_libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= pink-freebsd-syscallent.h
BUILT_SOURCES+= pink-freebsd-syscallent.h
CLEANFILES+= syscalls.master pink-freebsd-syscallent.h

syscalls.master: $(SYSSRC)/kern/syscalls.master
	$(AM_V_GEN)
	$(AM_V_at)cat $< > $@
pink-freebsd-syscallent.h: syscalls.master
	$(AM_V_GEN)
	$(AM_V_at)/bin/sh $(SYSSRC)/kern/makesyscalls.sh $< pink-freebsd-i386.conf

if X86_64
nodist_libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= pink-freebsd-syscallent32.h
BUILT_SOURCES+= pink-freebsd-syscallent32.h
CLEANFILES+= fbsd32-syscalls.master pink-freebsd-syscallent32.h

fbsd32-syscalls.master: $(SYSSRC)/compat/freebsd32/syscalls.master
	$(AM_V_GEN)
	$(AM_V_at)cat $< > $@
pink-freebsd-syscallent32.h: fbsd32-syscalls.master
	$(AM_V_GEN)
	$(AM_V_at)/bin/sh $(SYSSRC)/kern/makesyscalls.sh $< pink-freebsd-fbsd32.conf
endif # X86_64
endif # FREEBSD

if LINUX
if BITNESS_ONE
nodist_libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= pink-linux-syscallent.h
BUILT_SOURCES+= pink-linux-syscallent.h
CLEANFILES+= pink-linux-syscallent.h
if GCC
pink-linux-syscallent.h:
	$(AM_V_GEN)
	$(AM_V_at)echo "/* vim: set ro : */" > $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo "/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */" >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo '' | $(CPP) $(CPPFLAGS) --include asm/unistd.h -dM - |\
		$(EGREP) '^#define __NR_' | cut -d' ' -f2 | sort |\
		$(SED) -e 's/^__NR_//' |\
		while read name; do \
			echo "{__NR_$$name, \"$$name\"}," >> $@ ; \
		done
else
pink-linux-syscallent.h:
	$(AM_V_GEN)
	$(AM_V_at)echo "/* vim: set ro : */" > $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo "/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */" >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo >> $@
endif # GCC
endif # BITNESS_ONE

if BITNESS_TWO
nodist_libpinktrace_@PINKTRACE_PC_SLOT@_la_SOURCES+= pink-linux-syscallent32.h pink-linux-syscallent64.h
BUILT_SOURCES+= pink-linux-syscallent32.h pink-linux-syscallent64.h
CLEANFILES+= pink-linux-syscallent32.h pink-linux-syscallent64.h
if GCC
pink-linux-syscallent32.h:
	$(AM_V_GEN)
	$(AM_V_at)echo "/* vim: set ro : */" > $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo "/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */" >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo '' | $(CPP) $(CPPFLAGS) --include asm/unistd_32.h -dM - |\
		$(EGREP) '^#define __NR_' | cut -d' ' -f2 | sort |\
		$(SED) -e 's/^__NR_//' |\
		while read name; do \
			echo "{__NR_$$name, \"$$name\"}," >> $@ ; \
		done
pink-linux-syscallent64.h:
	$(AM_V_GEN)
	$(AM_V_at)echo "/* vim: set ro : */" > $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo "/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */" >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo '' | $(CPP) $(CPPFLAGS) --include asm/unistd_64.h -dM - |\
		$(EGREP) '^#define __NR_' | cut -d' ' -f2 | sort |\
		$(SED) -e 's/^__NR_//' |\
		while read name; do \
			echo "{__NR_$$name, \"$$name\"}," >> $@ ; \
		done
else
pink-linux-syscallent32.h:
	$(AM_V_GEN)
	$(AM_V_at)echo "/* vim: set ro : */" > $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo "/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */" >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo >> $@
pink-linux-syscallent64.h:
	$(AM_V_GEN)
	$(AM_V_at)echo "/* vim: set ro : */" > $@
	$(AM_V_at)echo >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo "/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */" >> $@
	$(AM_V_at)echo "/* ******************************************************** */" >> $@
	$(AM_V_at)echo >> $@
endif # GCC
endif # BITNESS_TWO
endif # LINUX
